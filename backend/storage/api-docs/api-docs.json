{
    "openapi": "3.0.0",
    "info": {
        "title": "GoToDive OpenApi Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": null
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Create user",
                "description": "Returns created user, some fields should be unique",
                "operationId": "Create new User",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisterResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "description": "Returns token",
                "operationId": "Login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Forgot password",
                "operationId": "Request reset password link",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password",
                "operationId": "Reset password with link",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResetPasswordResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "400": {
                        "description": "Error"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Returns nothing",
                "operationId": "Logout User",
                "requestBody": {
                    "required": false
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/users/me": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user",
                "description": "Returns currently authenticated user",
                "operationId": "showUser",
                "requestBody": {
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "description": "Returns currently authenticated user",
                "operationId": "Update User",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/photos": {
            "get": {
                "tags": [
                    "Photos"
                ],
                "summary": "Get photos",
                "description": "Returns array of all photos",
                "operationId": "Show all Photos",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPhotosResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{language}/photos/{photo}": {
            "delete": {
                "tags": [
                    "Photos"
                ],
                "summary": "Delete photo",
                "description": "Returns nothing",
                "operationId": "Delete Photo",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    },
                    {
                        "name": "Photo",
                        "in": "path",
                        "description": "Photo Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Language code is not supported."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{language}/service-categories": {
            "get": {
                "tags": [
                    "Service Categories"
                ],
                "summary": "Get categories",
                "description": "Returns array of categories",
                "operationId": "Show Categories",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCategoriesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Language code is not supported."
                    }
                }
            },
            "post": {
                "tags": [
                    "Service Categories"
                ],
                "summary": "Create category",
                "description": "Returns created category",
                "operationId": "Create new Category",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateCategoryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Language code is not supported."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{language}/service-categories/services": {
            "get": {
                "tags": [
                    "Service Categories"
                ],
                "summary": "Get categories with services",
                "description": "Returns array of categories with services",
                "operationId": "Show Services with categories",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCategoriesWithServicesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Language code is not supported."
                    }
                }
            }
        },
        "/{language}/service-categories/{serviceCategory}": {
            "get": {
                "tags": [
                    "Service Categories"
                ],
                "summary": "Get category",
                "description": "Returns specific category",
                "operationId": "Show Category",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    },
                    {
                        "name": "serviceCategory",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateCategoryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Language code is not supported."
                    }
                }
            },
            "put": {
                "tags": [
                    "Service Categories"
                ],
                "summary": "Update category",
                "description": "Returns updated category",
                "operationId": "Update Category",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    },
                    {
                        "name": "serviceCategory",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateCategoryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Language code is not supported."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Service Categories"
                ],
                "summary": "Delete category",
                "description": "Returns nothing",
                "operationId": "Delete Category",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    },
                    {
                        "name": "serviceCategory",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Language code is not supported."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{language}/service-categories/{serviceCategory}/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get services",
                "description": "Returns array of services related to certain category",
                "operationId": "Show Services",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    },
                    {
                        "name": "serviceCategory",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCategoryServicesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Language code is not supported."
                    }
                }
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create service",
                "description": "Returns created service",
                "operationId": "Create new Service",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    },
                    {
                        "name": "serviceCategory",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateServiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShowServiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Language code is not supported."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{language}/services/popular": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Show popular services",
                "description": "Returns array of popular services",
                "operationId": "Show Popular Services",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPopularServicesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Language code is not supported."
                    }
                }
            }
        },
        "/{language}/services/{service}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get service",
                "description": "Returns specific service",
                "operationId": "Show Service",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    },
                    {
                        "name": "service",
                        "in": "path",
                        "description": "Service Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShowServiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Language code is not supported."
                    }
                }
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update service",
                "description": "Returns updated service",
                "operationId": "Update service",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    },
                    {
                        "name": "service",
                        "in": "path",
                        "description": "Service Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateServiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShowServiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Language code is not supported."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Delete service",
                "description": "Returns nothing",
                "operationId": "Delete Service",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    },
                    {
                        "name": "service",
                        "in": "path",
                        "description": "Service Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Language code is not supported."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{language}/services/{service}/add-photo": {
            "post": {
                "tags": [
                    "Photos"
                ],
                "summary": "Add photo",
                "description": "Returns specific service with it's photos",
                "operationId": "Add photos to service",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    },
                    {
                        "name": "service",
                        "in": "path",
                        "description": "Service Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddPhotoRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShowServiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Language code is not supported."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{language}/search": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Search Services",
                "description": "Returns array of matching Services",
                "operationId": "Search Services",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Language code ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchServicesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Language code is not supported."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GetUserResponse": {
                "title": "Get User response",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the User",
                        "type": "string",
                        "example": "Patric Uren"
                    },
                    "email": {
                        "title": "Email",
                        "description": "User Email",
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "roles": {
                        "title": "roles",
                        "description": "Define if user has admin rights",
                        "type": "object",
                        "example": [
                            {
                                "id": 2,
                                "slug": "moderator",
                                "name": "Moderator",
                                "permissions": {
                                    "platform.index": true
                                }
                            }
                        ]
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "LoginRequest": {
                "title": "Login request",
                "description": "Login User",
                "properties": {
                    "password": {
                        "title": "Password",
                        "description": "Password of the User",
                        "type": "string",
                        "example": "Password"
                    },
                    "email": {
                        "title": "Email",
                        "description": "User Email",
                        "type": "string",
                        "example": "example@example.com"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Login"
                }
            },
            "LoginResponse": {
                "title": "Login response",
                "properties": {
                    "token": {
                        "title": "Token",
                        "description": "User`s Token",
                        "type": "string",
                        "example": "3|6fLEwUHhb8HXBVWD07NQtcioHznVOlv700isztFJ"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Login"
                }
            },
            "LogoutRequest": {
                "title": "Logout request",
                "description": "Logout User",
                "properties": {
                    "token": {
                        "title": "User token",
                        "description": "User token",
                        "type": "string",
                        "example": "6fLEwUHhb8HXBVWD07NQtcioHznVOlv700isztFJ"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Logout"
                }
            },
            "LogoutResponse": {
                "title": "Logout response",
                "description": "Logout User",
                "xml": {
                    "name": "Logout"
                }
            },
            "RegisterRequest": {
                "title": "Create User request",
                "description": "User model",
                "required": [
                    "email",
                    "name",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the User",
                        "type": "string",
                        "example": "Patric Uren"
                    },
                    "email": {
                        "title": "Email",
                        "description": "User Email",
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the User",
                        "type": "string",
                        "example": "Password"
                    },
                    "password_confirmation": {
                        "title": "Password Confirmation",
                        "description": "User should confirm password",
                        "type": "string",
                        "example": "Password"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "RegisterResponse": {
                "title": "Register response",
                "description": "User model",
                "properties": {
                    "token": {
                        "title": "Token",
                        "description": "Users Token",
                        "type": "string",
                        "example": "6|6fLEwUHhb8HXBVWD07NQtcioHznVOlv700isztFJ"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "ResetPasswordRequest": {
                "title": "Reset Password request",
                "description": "User model",
                "required": [
                    "email",
                    "token",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "User Email",
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "token": {
                        "title": "Token",
                        "description": "User token from email",
                        "type": "string",
                        "example": "12a3272388778f3f3638317772b90126da1330a6a95a0ba9daede1494932751c"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the User",
                        "type": "string",
                        "example": "Password"
                    },
                    "password_confirmation": {
                        "title": "Password Confirmation",
                        "description": "Password Confirmation of the User",
                        "type": "string",
                        "example": "Password"
                    }
                },
                "type": "object"
            },
            "ForgotPasswordRequest": {
                "title": "Forgot Password request",
                "description": "User model",
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "User Email",
                        "type": "string",
                        "example": "example@example.com"
                    }
                },
                "type": "object"
            },
            "ResetPasswordResponse": {
                "title": "Reset Password response",
                "description": "User model",
                "properties": {
                    "token": {
                        "title": "Token",
                        "description": "User`s Token",
                        "type": "string",
                        "example": "3|6fLEwUHhb8HXBVWD07NQtcioHznVOlv700isztFJ"
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "Update User request",
                "description": "User model",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the User",
                        "type": "string",
                        "example": "Patric Uren"
                    },
                    "email": {
                        "title": "Email",
                        "description": "User Email",
                        "type": "string",
                        "example": "example@example.com"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "GetPhotosResponse": {
                "title": "Get Photos response",
                "description": "Photos Model",
                "properties": {
                    "data": {
                        "title": "Photos",
                        "type": "object",
                        "example": [
                            {
                                "id": 1,
                                "photo_url": "images/1110f3157b27168a194ab74b235c517f.png",
                                "optimized_photo_url": "optimized/6381d8253c912ccd8980d588e9d4fd1e.png"
                            },
                            {
                                "id": 2,
                                "photo_url": "images/2110f3157b27168a194ab74b235c517f.png",
                                "optimized_photo_url": "optimized/2381d8253c912ccd8980d588e9d4fd1e.png"
                            }
                        ]
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Service"
                }
            },
            "CreateCategoryRequest": {
                "title": "Create Category request",
                "description": "Category model, requires moderator rights",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Category Title",
                        "type": "string",
                        "example": "Scuba Diving"
                    },
                    "order": {
                        "title": "Order",
                        "description": "Order position to retrieve Category",
                        "type": "integer",
                        "example": "2"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "CreateCategoryResponse": {
                "title": "Create Category response",
                "description": "Category model",
                "properties": {
                    "data": {
                        "title": "Category",
                        "description": "Returns newly created category",
                        "type": "object",
                        "example": {
                            "id": 1,
                            "title": "Alias.",
                            "order": 1
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "category"
                }
            },
            "GetCategoriesResponse": {
                "title": "Get Categories response",
                "description": "Categories collection",
                "properties": {
                    "data": {
                        "title": "Categories",
                        "description": "Returns array of categories",
                        "type": "object",
                        "example": [
                            {
                                "id": 1,
                                "title": "Alias.",
                                "order": 1
                            },
                            {
                                "id": 2,
                                "title": "Autem.",
                                "order": 2
                            }
                        ]
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Categories"
                }
            },
            "GetCategoriesWithServicesResponse": {
                "title": "Get Categories With Services response",
                "description": "Categories with services collection",
                "properties": {
                    "data": {
                        "title": "Categories",
                        "description": "Returns array of categories with services",
                        "type": "object",
                        "example": [
                            {
                                "id": 1,
                                "title": "Ducimus.",
                                "order": 1,
                                "services": [
                                    {
                                        "id": 1,
                                        "title": "Fuga esse soluta nam.",
                                        "order": 1,
                                        "serviceCategory": 1,
                                        "description": "Ut facere in unde repudiandae blanditiis. Sit dolorem quo voluptas non eos qui. Rerum facere aut sint aut porro sit. Magni placeat et qui id fugiat voluptas sunt. Voluptas nam ut dolorem praesentium nisi doloribus velit. Aspernatur labore nemo velit asperiores minima esse in.",
                                        "duration": "7 minutes",
                                        "price": 131,
                                        "isPopular": 0,
                                        "short_description": "Et autem totam qui quia porro adipisci consequatur.",
                                        "min_age": "30",
                                        "required_experience": "",
                                        "max_depth": "1",
                                        "course_certificate": "Ut quisquam dolor est nulla quia consectetur. Voluptatem dolorem omnis iste dignissimos sed sint animi. Et iste laudantium eum ad aperiam harum non. Voluptatem molestiae dolores reiciendis velit exercitationem iure dicta."
                                    },
                                    {
                                        "id": 2,
                                        "title": "Et qui ipsa quas.",
                                        "order": 1,
                                        "serviceCategory": 1,
                                        "description": "Ut dolores consectetur cumque voluptates quos voluptate. Placeat eius dolorem distinctio dolorum beatae sit qui officia. Assumenda libero vitae ea. Ea quo consequuntur fugiat blanditiis quia doloribus. Rerum non porro dolor est aliquam. Dolore enim aliquid provident molestias accusamus atque.",
                                        "duration": "8 minutes",
                                        "price": 932,
                                        "isPopular": 0,
                                        "short_description": "Et quo non nam non. Temporibus sapiente quia voluptates sunt architecto ut doloribus.",
                                        "min_age": "9",
                                        "required_experience": "",
                                        "max_depth": "1",
                                        "course_certificate": "Et laboriosam libero earum fuga amet. Alias magnam eveniet aut eos beatae. Assumenda dolor a voluptatibus nihil rerum. Dolores rerum fugit voluptatibus nobis itaque doloremque aut officia."
                                    },
                                    {
                                        "id": 3,
                                        "title": "Itaque molestiae et qui.",
                                        "order": 1,
                                        "serviceCategory": 1,
                                        "description": "Autem quis et expedita. Excepturi beatae eos molestiae consectetur minus facilis dignissimos. Quia consequatur accusamus commodi sunt esse corporis incidunt nemo. Quaerat aut facilis consectetur cum accusantium. Iste vitae sit nesciunt voluptas laborum aperiam dolor. Est omnis ipsam nobis rerum quia quisquam vero enim.",
                                        "duration": "15 minutes",
                                        "price": 532,
                                        "isPopular": 1,
                                        "short_description": "Voluptatum esse odit nisi error quisquam rerum. Dignissimos et beatae fugiat.",
                                        "min_age": "17",
                                        "required_experience": "14 hours",
                                        "max_depth": "1",
                                        "course_certificate": "Aut quae modi mollitia sint illum quis. Modi debitis vel accusamus. Magnam nisi quia enim impedit perspiciatis nostrum. Voluptatem tempore accusantium reprehenderit error inventore."
                                    },
                                    {
                                        "id": 4,
                                        "title": "Vitae dolorem qui sit.",
                                        "order": 1,
                                        "serviceCategory": 1,
                                        "description": "Reprehenderit qui repellendus qui placeat excepturi nihil. Dolor aut sed et sint. Quis repudiandae pariatur molestiae quis. Velit voluptatem eveniet et. Ipsam esse sint velit voluptatem cumque soluta vel. Sed veritatis odio porro earum quis dolor. Ea qui qui expedita facere consequuntur molestiae numquam.",
                                        "duration": "28 minutes",
                                        "price": 442,
                                        "isPopular": 1,
                                        "short_description": "Optio esse sunt illo quod recusandae. Possimus totam omnis reprehenderit consequatur.",
                                        "min_age": "26",
                                        "required_experience": "8 hours",
                                        "max_depth": "1",
                                        "course_certificate": "Voluptatem libero ut voluptatem asperiores enim eum. Aut consectetur sapiente totam dignissimos non minus. Voluptatibus quia tempore consequuntur ut explicabo ea. Atque voluptatum consequatur qui perspiciatis saepe. Minus dolorem voluptas omnis. Corporis adipisci ut architecto quae sed. Totam minus recusandae quae."
                                    }
                                ]
                            },
                            {
                                "id": 2,
                                "title": "In.",
                                "order": 1,
                                "services": [
                                    {
                                        "id": 5,
                                        "title": "Amet minus et facere.",
                                        "order": 2,
                                        "serviceCategory": 2,
                                        "description": "Ullam voluptatem corporis quis laudantium commodi adipisci optio. Adipisci distinctio est facilis est. Laudantium optio quo numquam ut quo ipsum. Tenetur minima ea odio commodi. Magnam est illum eaque. Doloribus quis fuga soluta earum qui sint ad.",
                                        "duration": "26 minutes",
                                        "price": 537,
                                        "isPopular": 0,
                                        "short_description": "Explicabo adipisci perferendis minima asperiores itaque accusamus impedit.",
                                        "min_age": "30",
                                        "required_experience": "",
                                        "max_depth": "1",
                                        "course_certificate": ""
                                    }
                                ]
                            }
                        ]
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Categories"
                }
            },
            "AddPhotoRequest": {
                "title": "Add Photo request",
                "description": "Photo model, requires moderator rights",
                "required": [
                    "photos"
                ],
                "properties": {
                    "photos": {
                        "title": "Photos",
                        "type": "array",
                        "items": {
                            "description": "file to upload",
                            "type": "string",
                            "format": "binary"
                        },
                        "minItems": 1
                    }
                },
                "type": "object"
            },
            "CreateServiceRequest": {
                "title": "Create Service request",
                "description": "Service model, requires moderator rights",
                "required": [
                    "title",
                    "description",
                    "duration",
                    "price",
                    "short_description",
                    "min_age"
                ],
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Name of the service",
                        "type": "string",
                        "example": "Deep hard diving"
                    },
                    "order": {
                        "title": "Order",
                        "description": "Order position to retrieve service",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Long service description",
                        "type": "string",
                        "example": "Doloremque repellat earum iure vitae iusto. Doloremque et reiciendis doloribus. "
                    },
                    "duration": {
                        "title": "Duration",
                        "description": "Service duration",
                        "type": "string",
                        "example": "1 Hour"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Service pricing",
                        "type": "integer",
                        "example": "100"
                    },
                    "isPopular": {
                        "title": "IsPopular",
                        "description": "Shows 1 if service is popular",
                        "type": "boolean",
                        "example": "1"
                    },
                    "short_description": {
                        "title": "Short Description",
                        "description": "Short service description",
                        "type": "string",
                        "example": "Doloremque repellat earum iure."
                    },
                    "min_age": {
                        "title": "Minimum Age",
                        "description": "Shows minimum age required to sign up for service",
                        "type": "integer",
                        "example": "10"
                    },
                    "required_experience": {
                        "title": "Required Experience",
                        "description": "Shows experience required to sign up for service",
                        "type": "string",
                        "example": "15 hours"
                    },
                    "max_depth": {
                        "title": "Maximum Depth",
                        "description": "Shows max depth customer will dive to",
                        "type": "string",
                        "example": "15 meters"
                    },
                    "course_certificate": {
                        "title": "Course certificate",
                        "description": "Shows required certificate",
                        "type": "string",
                        "example": "super duper diver certificate"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Service"
                }
            },
            "GetCategoryServicesResponse": {
                "title": "Get Category Services response",
                "description": "Service collection",
                "properties": {
                    "data": {
                        "title": "Services",
                        "type": "object",
                        "example": [
                            {
                                "id": 1,
                                "title": "Nobis rerum.",
                                "order": 1,
                                "serviceCategory": 1,
                                "description": "Doloremque repellat earum iure vitae iusto. Doloremque et reiciendis doloribus. Esse hic quos et rerum. Beatae ea ut praesentium molestiae dicta.",
                                "duration": "7 minutes",
                                "price": 131,
                                "isPopular": 0,
                                "short_description": "Dolor a similique eum enim.",
                                "min_age": "30",
                                "required_experience": "",
                                "max_depth": "1",
                                "course_certificate": "Aut ab suscipit maiores vel tempore et. Alias aperiam facere et atque quaerat vel provident. Et expedita dicta deleniti quos omnis. Aliquam voluptatem saepe consequatur."
                            },
                            {
                                "id": 2,
                                "title": "Distinctio.",
                                "order": 1,
                                "serviceCategory": 1,
                                "description": "Delectus quos eos sed eos saepe incidunt veniam. Deleniti tenetur assumenda ipsa et. Officia consequatur rerum illum dolor quis expedita. Id reprehenderit illo porro quae qui animi. Ratione veritatis perferendis impedit.",
                                "duration": "8 minutes",
                                "price": 932,
                                "isPopular": 0,
                                "short_description": "Qui ut debitis omnis numquam explicabo.",
                                "min_age": "9",
                                "required_experience": "",
                                "max_depth": "1",
                                "course_certificate": "Fugiat ut nobis nihil impedit. Blanditiis praesentium explicabo animi omnis nisi. Sunt unde aut saepe dolores quia sit. Enim reiciendis nostrum excepturi autem facilis harum non."
                            },
                            {
                                "id": 3,
                                "title": "Dolore rem.",
                                "order": 1,
                                "serviceCategory": 1,
                                "description": "Rem vel dolorem error rerum sit necessitatibus. Eos consequatur ad omnis quis facilis omnis. Iure dolores magni laboriosam tenetur maxime non.",
                                "duration": "15 minutes",
                                "price": 532,
                                "isPopular": 1,
                                "short_description": "Est corrupti et vel minima rerum molestias.",
                                "min_age": "17",
                                "required_experience": "14 hours",
                                "max_depth": "1",
                                "course_certificate": "Qui rerum qui iste voluptatem. Blanditiis quia culpa aut. Et aperiam voluptatem soluta deserunt. Enim quis totam occaecati debitis."
                            },
                            {
                                "id": 4,
                                "title": "Est labore.",
                                "order": 1,
                                "serviceCategory": 1,
                                "description": "Commodi laborum quae eum tempora. Rem ullam qui quod. Beatae aperiam temporibus cupiditate omnis.",
                                "duration": "28 minutes",
                                "price": 442,
                                "isPopular": 1,
                                "short_description": "Molestias et natus porro eius aliquam quam nihil.",
                                "min_age": "26",
                                "required_experience": "8 hours",
                                "max_depth": "1",
                                "course_certificate": "Et doloremque dolorem quae. Ducimus non voluptas ut dolore quod. Et eum iure eaque possimus debitis nulla repellendus."
                            }
                        ]
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Services"
                }
            },
            "GetPopularServicesResponse": {
                "title": "Get Popular Services response",
                "description": "Service collection",
                "properties": {
                    "data": {
                        "title": "Services",
                        "type": "object",
                        "example": {
                            "0": {
                                "id": 3,
                                "title": "Dolore rem.",
                                "order": 1,
                                "serviceCategory": 1,
                                "description": "Rem vel dolorem error rerum sit necessitatibus. Eos consequatur ad omnis quis facilis omnis. Iure dolores magni laboriosam tenetur maxime non.",
                                "duration": "15 minutes",
                                "price": 532,
                                "isPopular": 1,
                                "short_description": "Est corrupti et vel minima rerum molestias.",
                                "min_age": "17",
                                "required_experience": "14 hours",
                                "max_depth": "1",
                                "course_certificate": "Qui rerum qui iste voluptatem. Blanditiis quia culpa aut. Et aperiam voluptatem soluta deserunt. Enim quis totam occaecati debitis.",
                                "photos": [
                                    {
                                        "id": 1,
                                        "photo_url": "images/1110f3157b27168a194ab74b235c517f.png",
                                        "optimized_photo_url": "optimized/6381d8253c912ccd8980d588e9d4fd1e.png"
                                    },
                                    {
                                        "id": 2,
                                        "photo_url": "images/1110f3157b27168a194ab74b235c517f.png",
                                        "optimized_photo_url": "optimized/6381d8253c912ccd8980d588e9d4fd1e.png"
                                    }
                                ]
                            },
                            "1": {
                                "id": 4,
                                "title": "Est labore.",
                                "order": 1,
                                "serviceCategory": 1,
                                "description": "Commodi laborum quae eum tempora. Rem ullam qui quod. Beatae aperiam temporibus cupiditate omnis.",
                                "duration": "28 minutes",
                                "price": 442,
                                "isPopular": 1,
                                "short_description": "Molestias et natus porro eius aliquam quam nihil.",
                                "min_age": "26",
                                "required_experience": "8 hours",
                                "max_depth": "1",
                                "course_certificate": "Et doloremque dolorem quae. Ducimus non voluptas ut dolore quod. Et eum iure eaque possimus debitis nulla repellendus.",
                                "photos": [
                                    {
                                        "id": 1,
                                        "photo_url": "images/1110f3157b27168a194ab74b235c517f.png",
                                        "optimized_photo_url": "optimized/6381d8253c912ccd8980d588e9d4fd1e.png"
                                    },
                                    {
                                        "id": 2,
                                        "photo_url": "images/1110f3157b27168a194ab74b235c517f.png",
                                        "optimized_photo_url": "optimized/6381d8253c912ccd8980d588e9d4fd1e.png"
                                    }
                                ]
                            },
                            "2": {
                                "id": 6,
                                "title": "Alias et.",
                                "order": 2,
                                "serviceCategory": 2,
                                "description": "Eveniet doloribus ut in est. Odit est maxime nostrum enim ea. Quos expedita perferendis et aut a rerum officiis. Neque illum sint aut accusantium deleniti. Id quia ea debitis ut repudiandae molestiae et eum. Excepturi maiores voluptas qui in.",
                                "duration": "27 minutes",
                                "price": 213,
                                "isPopular": 1,
                                "short_description": "Voluptatibus sit omnis tenetur est natus animi tempore.",
                                "min_age": "26",
                                "required_experience": "13 hours",
                                "max_depth": "0",
                                "course_certificate": "",
                                "photos": [
                                    {
                                        "id": 1,
                                        "photo_url": "images/1110f3157b27168a194ab74b235c517f.png",
                                        "optimized_photo_url": "optimized/6381d8253c912ccd8980d588e9d4fd1e.png"
                                    },
                                    {
                                        "id": 2,
                                        "photo_url": "images/1110f3157b27168a194ab74b235c517f.png",
                                        "optimized_photo_url": "optimized/6381d8253c912ccd8980d588e9d4fd1e.png"
                                    }
                                ]
                            },
                            "links": {
                                "first": null,
                                "last": null,
                                "prev": null,
                                "next": "http://localhost:8000/api/en/services/popular?cursor=eyJzZXJ2aWNlcy5pZCI6NiwiX3BvaW50c1RvTmV4dEl0ZW1zIjp0cnVlfQ"
                            },
                            "meta": {
                                "path": "http://localhost:8000/api/en/services/popular",
                                "per_page": 3
                            }
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Services"
                }
            },
            "SearchServicesResponse": {
                "title": "Search Services response",
                "description": "Service collection",
                "properties": {
                    "data": {
                        "title": "Services",
                        "type": "object",
                        "example": [
                            {
                                "id": 1,
                                "title": "Nobis rerum.",
                                "order": 1,
                                "serviceCategory": 1,
                                "description": "Doloremque repellat earum iure vitae iusto. Doloremque et reiciendis doloribus. Esse hic quos et rerum. Beatae ea ut praesentium molestiae dicta.",
                                "duration": "7 minutes",
                                "price": 131,
                                "isPopular": 0,
                                "short_description": "Dolor a similique eum enim.",
                                "min_age": "30",
                                "required_experience": "",
                                "max_depth": "1",
                                "course_certificate": "Aut ab suscipit maiores vel tempore et. Alias aperiam facere et atque quaerat vel provident. Et expedita dicta deleniti quos omnis. Aliquam voluptatem saepe consequatur."
                            },
                            {
                                "id": 2,
                                "title": "Distinctio.",
                                "order": 1,
                                "serviceCategory": 1,
                                "description": "Delectus quos eos sed eos saepe incidunt veniam. Deleniti tenetur assumenda ipsa et. Officia consequatur rerum illum dolor quis expedita. Id reprehenderit illo porro quae qui animi. Ratione veritatis perferendis impedit.",
                                "duration": "8 minutes",
                                "price": 932,
                                "isPopular": 0,
                                "short_description": "Qui ut debitis omnis numquam explicabo.",
                                "min_age": "9",
                                "required_experience": "",
                                "max_depth": "1",
                                "course_certificate": "Fugiat ut nobis nihil impedit. Blanditiis praesentium explicabo animi omnis nisi. Sunt unde aut saepe dolores quia sit. Enim reiciendis nostrum excepturi autem facilis harum non."
                            },
                            {
                                "id": 3,
                                "title": "Dolore rem.",
                                "order": 1,
                                "serviceCategory": 1,
                                "description": "Rem vel dolorem error rerum sit necessitatibus. Eos consequatur ad omnis quis facilis omnis. Iure dolores magni laboriosam tenetur maxime non.",
                                "duration": "15 minutes",
                                "price": 532,
                                "isPopular": 1,
                                "short_description": "Est corrupti et vel minima rerum molestias.",
                                "min_age": "17",
                                "required_experience": "14 hours",
                                "max_depth": "1",
                                "course_certificate": "Qui rerum qui iste voluptatem. Blanditiis quia culpa aut. Et aperiam voluptatem soluta deserunt. Enim quis totam occaecati debitis."
                            },
                            {
                                "id": 4,
                                "title": "Est labore.",
                                "order": 1,
                                "serviceCategory": 1,
                                "description": "Commodi laborum quae eum tempora. Rem ullam qui quod. Beatae aperiam temporibus cupiditate omnis.",
                                "duration": "28 minutes",
                                "price": 442,
                                "isPopular": 1,
                                "short_description": "Molestias et natus porro eius aliquam quam nihil.",
                                "min_age": "26",
                                "required_experience": "8 hours",
                                "max_depth": "1",
                                "course_certificate": "Et doloremque dolorem quae. Ducimus non voluptas ut dolore quod. Et eum iure eaque possimus debitis nulla repellendus."
                            }
                        ]
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Services"
                }
            },
            "ShowServiceResponse": {
                "title": "Show Service response",
                "description": "Service model",
                "properties": {
                    "data": {
                        "title": "Service",
                        "type": "object",
                        "example": [
                            {
                                "id": 1,
                                "title": "Nobis rerum.",
                                "order": 1,
                                "serviceCategory": 1,
                                "description": "Doloremque repellat earum iure vitae iusto. Doloremque et reiciendis doloribus. Esse hic quos et rerum. Beatae ea ut praesentium molestiae dicta.",
                                "duration": "7 minutes",
                                "price": 131,
                                "isPopular": 0,
                                "short_description": "Dolor a similique eum enim.",
                                "min_age": "30",
                                "required_experience": "",
                                "max_depth": "1",
                                "course_certificate": "Aut ab suscipit maiores vel tempore et. Alias aperiam facere et atque quaerat vel provident. Et expedita dicta deleniti quos omnis. Aliquam voluptatem saepe consequatur.",
                                "photos": [
                                    {
                                        "id": 1,
                                        "photo_url": "images/1110f3157b27168a194ab74b235c517f.png",
                                        "optimized_photo_url": "optimized/6381d8253c912ccd8980d588e9d4fd1e.png"
                                    },
                                    {
                                        "id": 2,
                                        "photo_url": "images/1110f3157b27168a194ab74b235c517f.png",
                                        "optimized_photo_url": "optimized/6381d8253c912ccd8980d588e9d4fd1e.png"
                                    }
                                ]
                            }
                        ]
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Service"
                }
            }
        },
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Token Based",
                "in": "header",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "API Endpoints of Auth"
        },
        {
            "name": "User",
            "description": "API Endpoints of User"
        },
        {
            "name": "Service Categories",
            "description": "API Endpoints of Categories"
        },
        {
            "name": "Services",
            "description": "API Endpoints of Services"
        },
        {
            "name": "Photos",
            "description": "API Endpoints of Photos"
        }
    ],
    "security": [
        []
    ]
}